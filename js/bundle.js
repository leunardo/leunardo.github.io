!function(e){function t(o){if(n[o])return n[o].exports;var c=n[o]={i:o,l:!1,exports:{}};return e[o].call(c.exports,c,c.exports,t),c.l=!0,c.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,n){"use strict";function o(){var e=[].slice.call(r.children);c.isContactOpen&&c.showContact(),t.isAboutOpen=u=!u,u?(r.style.flexGrow="5",r.style.maxHeight="100rem"):(r.style.flexGrow="0.001",r.style.maxHeight="0rem"),e.forEach(function(e){e.style.opacity=u?"1":"0"})}Object.defineProperty(t,"__esModule",{value:!0});var c=n(1),r=document.getElementById("about"),u=!1;t.isAboutOpen=u,t.showAbout=o},function(e,t,n){"use strict";function o(){var e=[].slice.call(r.children);c.isAboutOpen&&c.showAbout(),t.isContactOpen=u=!u,u?(r.style.flexGrow="5",r.style.maxHeight="100rem"):(r.style.flexGrow="0.0001",r.style.maxHeight="0rem"),e.forEach(function(e){e.style.opacity=u?"1":"0"})}Object.defineProperty(t,"__esModule",{value:!0});var c=n(0),r=document.getElementById("contact"),u=!1;t.isContactOpen=u,t.showContact=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(0),c=n(1),r=document.getElementById("contact-anchor");t.contactAnchor=r;var u=document.getElementById("about-anchor");t.aboutAnchor=u,r.addEventListener("click",c.showContact),u.addEventListener("click",o.showAbout)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,