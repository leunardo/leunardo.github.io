!function(t){function e(o){if(n[o])return n[o].exports;var c=n[o]={i:o,l:!1,exports:{}};return t[o].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";function o(){var t=[].slice.call(r.children);c.isContactOpen&&c.showContact(),e.isAboutOpen=u=!u,u?(r.style.flexGrow="5",r.style.maxHeight="9999px"):(r.style.flexGrow="0.001",r.style.maxHeight="0px"),t.forEach(function(t){t.style.opacity=u?"0":"1"})}Object.defineProperty(e,"__esModule",{value:!0});var c=n(1),r=document.getElementById("about"),u=(document.getElementById("about-anchor"),!1);e.isAboutOpen=u,e.showAbout=o},function(t,e,n){"use strict";function o(){var t=[].slice.call(r.children);c.isAboutOpen&&c.showAbout(),e.isContactOpen=u=!u,u?(r.style.flexGrow="5",r.style.maxHeight="9999px"):(r.style.flexGrow="0.0001",r.style.maxHeight="0px"),t.forEach(function(t){t.style.opacity=u?"0":"1"})}Object.defineProperty(e,"__esModule",{value:!0});var c=n(0),r=document.getElementById("contact"),u=(document.getElementById("contact-anchor"),!1);e.isContactOpen=u,e.showContact=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),c=n(1),r=document.getElementById("contact-anchor"),u=document.getElementById("about-anchor");r.addEventListener("click",c.showContact),u.addEventListener("click",o.showAbout)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,